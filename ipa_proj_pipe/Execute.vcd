$date
	Wed Mar 09 11:54:01 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var reg 4 ! icode [3:0] $end
$upscope $end
$scope module tb $end
$var reg 4 " ifun [3:0] $end
$upscope $end
$scope module tb $end
$var reg 64 # valC [63:0] $end
$upscope $end
$scope module tb $end
$var reg 64 $ valA [63:0] $end
$upscope $end
$scope module tb $end
$var reg 64 % valB [63:0] $end
$upscope $end
$scope module tb $end
$var wire 64 & valE [63:0] $end
$upscope $end
$scope module tb $end
$var wire 1 ' Cnd $end
$upscope $end
$scope module tb $end
$var reg 1 ( clock $end
$upscope $end
$scope module tb $end
$var wire 3 ) new_cc [2:0] $end
$upscope $end
$scope module tb $end
$var wire 1 * set_cc $end
$upscope $end
$scope module tb $end
$var reg 3 + cc [2:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 +
1*
b10 )
1(
0'
b1111111111111111111111111111111111111111111111111111111111111111 &
b100100010 %
b100100011 $
b1 #
b1 "
b110 !
$end
#10
0(
#20
1(
#30
0(
#40
1(
#50
0(
#60
1(
#70
0(
#80
